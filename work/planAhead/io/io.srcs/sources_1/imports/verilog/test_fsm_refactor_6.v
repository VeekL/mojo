/*
   This file was generated automatically by the Mojo IDE version B1.3.6.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module test_fsm_refactor_6 (
    input clk,
    input rst,
    output reg out,
    input inputA,
    input inputB,
    input carryin,
    output reg carryOut,
    output reg sumOut
  );
  
  
  
  
  localparam NOCARRY_state = 1'd0;
  localparam CARRY_state = 1'd1;
  
  reg M_state_d, M_state_q = NOCARRY_state;
  
  integer sum;
  
  integer nextState;
  
  always @* begin
    M_state_d = M_state_q;
    
    out = 1'h0;
    if (carryin) begin
      M_state_d = CARRY_state;
      nextState = 1'h1;
    end else begin
      M_state_d = NOCARRY_state;
      nextState = 1'h0;
    end
    
    case (M_state_q)
      NOCARRY_state: begin
        if (inputA ^ inputB) begin
          sum = 1'h1;
        end else begin
          if (inputA & inputB) begin
            nextState = 1'h1;
            sum = 1'h0;
          end else begin
            sum = 1'h0;
          end
        end
      end
      CARRY_state: begin
        if (inputA ^ inputB) begin
          sum = 1'h0;
        end else begin
          if (inputA & inputB) begin
            sum = 1'h1;
          end else begin
            nextState = 1'h0;
            sum = 1'h1;
          end
        end
      end
    endcase
    carryOut = 1'h0;
    if (nextState == 1'h1) begin
      carryOut = 1'h1;
    end
    sumOut = sum;
  end
  
  always @(posedge clk) begin
    if (rst == 1'b1) begin
      M_state_q <= 1'h0;
    end else begin
      M_state_q <= M_state_d;
    end
  end
  
endmodule
